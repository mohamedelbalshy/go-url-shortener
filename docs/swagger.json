{
    "swagger": "2.0",
    "info": {
        "description": "A simple URL shortener service built with Gin and PostgreSQL",
        "title": "Golang URL Shortener API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/url/shorten": {
            "post": {
                "description": "Generates a short URL for a given long URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "URL"
                ],
                "summary": "Shorten a URL",
                "parameters": [
                    {
                        "description": "Long URL",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/url.ShortenURLRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/url.ShortenedURL"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/url.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/url.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/url/{short_url}": {
            "get": {
                "description": "Fetches long URL from short URL and redirects",
                "tags": [
                    "URL"
                ],
                "summary": "Redirect to long URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short URL",
                        "name": "short_url",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/url.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "url.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "url.ShortenURLRequest": {
            "type": "object",
            "properties": {
                "long_url": {
                    "type": "string"
                }
            }
        },
        "url.ShortenedURL": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Timestamp",
                    "type": "string"
                },
                "deleted_at": {
                    "description": "Nullable Timestamp",
                    "type": "string"
                },
                "id": {
                    "description": "Primary Key",
                    "type": "integer"
                },
                "long_url": {
                    "type": "string"
                },
                "short_url": {
                    "type": "string"
                },
                "updated_at": {
                    "description": "Timestamp",
                    "type": "string"
                }
            }
        }
    }
}